program	SPROGRAM	17	1
z20	SIDENTIFIER	43	1
(	SLPAREN	33	1
input	SIDENTIFIER	43	1
,	SCOMMA	41	1
output	SIDENTIFIER	43	1
)	SRPAREN	34	1
;	SSEMICOLON	37	1
var	SVAR	21	2
x	SIDENTIFIER	43	2
,	SCOMMA	41	2
y	SIDENTIFIER	43	2
,	SCOMMA	41	2
Result	SIDENTIFIER	43	2
:	SCOLON	38	2
integer	SINTEGER	11	2
;	SSEMICOLON	37	2
procedure	SPROCEDURE	16	4
swap	SIDENTIFIER	43	4
(	SLPAREN	33	4
x	SIDENTIFIER	43	4
,	SCOMMA	41	4
y	SIDENTIFIER	43	4
:	SCOLON	38	4
integer	SINTEGER	11	4
)	SRPAREN	34	4
;	SSEMICOLON	37	4
var	SVAR	21	5
tmp	SIDENTIFIER	43	5
:	SCOLON	38	5
integer	SINTEGER	11	5
;	SSEMICOLON	37	5
begin	SBEGIN	2	6
tmp	SIDENTIFIER	43	7
:=	SASSIGN	40	7
x	SIDENTIFIER	43	7
;	SSEMICOLON	37	7
x	SIDENTIFIER	43	8
:=	SASSIGN	40	8
y	SIDENTIFIER	43	8
;	SSEMICOLON	37	8
y	SIDENTIFIER	43	9
:=	SASSIGN	40	9
tmp	SIDENTIFIER	43	9
end	SEND	8	10
;	SSEMICOLON	37	10
procedure	SPROCEDURE	16	12
gcd	SIDENTIFIER	43	12
(	SLPAREN	33	12
x	SIDENTIFIER	43	12
,	SCOMMA	41	12
y	SIDENTIFIER	43	12
,	SCOMMA	41	12
result	SIDENTIFIER	43	12
:	SCOLON	38	12
integer	SINTEGER	11	12
)	SRPAREN	34	12
;	SSEMICOLON	37	12
var	SVAR	21	13
tanaka	SIDENTIFIER	43	13
:	SCOLON	38	13
integer	SINTEGER	11	13
;	SSEMICOLON	37	13
begin	SBEGIN	2	14
if	SIF	10	15
x	SIDENTIFIER	43	15
<	SLESS	26	15
y	SIDENTIFIER	43	15
then	STHEN	19	15
begin	SBEGIN	2	16
smap	SIDENTIFIER	43	16
(	SLPAREN	33	16
x	SIDENTIFIER	43	16
,	SCOMMA	41	16
y	SIDENTIFIER	43	16
)	SRPAREN	34	16
end	SEND	8	16
;	SSEMICOLON	37	16
if	SIF	10	17
y	SIDENTIFIER	43	17
=	SEQUAL	24	17
0	SCONSTANT	44	17
then	STHEN	19	17
begin	SBEGIN	2	18
result	SIDENTIFIER	43	18
:=	SASSIGN	40	18
x	SIDENTIFIER	43	18
end	SEND	8	18
else	SELSE	7	19
begin	SBEGIN	2	19
tanaka	SIDENTIFIER	43	20
:=	SASSIGN	40	20
x	SIDENTIFIER	43	20
mod	SMOD	12	20
y	SIDENTIFIER	43	20
;	SSEMICOLON	37	20
gcd	SIDENTIFIER	43	21
(	SLPAREN	33	21
y	SIDENTIFIER	43	21
,	SCOMMA	41	21
tanaka	SIDENTIFIER	43	21
,	SCOMMA	41	21
result	SIDENTIFIER	43	21
)	SRPAREN	34	21
end	SEND	8	22
end	SEND	8	23
;	SSEMICOLON	37	23
begin	SBEGIN	2	25
writeln	SWRITELN	23	26
(	SLPAREN	33	26
'Input x'	SSTRING	45	26
)	SRPAREN	34	26
;	SSEMICOLON	37	26
readln	SREADLN	18	27
(	SLPAREN	33	27
x	SIDENTIFIER	43	27
)	SRPAREN	34	27
;	SSEMICOLON	37	27
if	SIF	10	28
x	SIDENTIFIER	43	28
>=	SGREATEQUAL	28	28
0	SCONSTANT	44	28
then	STHEN	19	28
begin	SBEGIN	2	28
writeln	SWRITELN	23	29
(	SLPAREN	33	29
'Input y'	SSTRING	45	29
)	SRPAREN	34	29
;	SSEMICOLON	37	29
readln	SREADLN	18	30
(	SLPAREN	33	30
y	SIDENTIFIER	43	30
)	SRPAREN	34	30
;	SSEMICOLON	37	30
if	SIF	10	31
y	SIDENTIFIER	43	31
>=	SGREATEQUAL	28	31
0	SCONSTANT	44	31
then	STHEN	19	31
begin	SBEGIN	2	32
gcd	SIDENTIFIER	43	33
(	SLPAREN	33	33
x	SIDENTIFIER	43	33
,	SCOMMA	41	33
y	SIDENTIFIER	43	33
,	SCOMMA	41	33
Result	SIDENTIFIER	43	33
)	SRPAREN	34	33
;	SSEMICOLON	37	33
writeln	SWRITELN	23	34
(	SLPAREN	33	34
'gcd('	SSTRING	45	34
,	SCOMMA	41	34
x	SIDENTIFIER	43	34
,	SCOMMA	41	34
', '	SSTRING	45	34
,	SCOMMA	41	34
y	SIDENTIFIER	43	34
,	SCOMMA	41	34
') = '	SSTRING	45	34
,	SCOMMA	41	34
Result	SIDENTIFIER	43	34
)	SRPAREN	34	34
end	SEND	8	35
else	SELSE	7	36
begin	SBEGIN	2	36
writeln	SWRITELN	23	37
(	SLPAREN	33	37
'Input error'	SSTRING	45	37
)	SRPAREN	34	37
end	SEND	8	38
end	SEND	8	39
else	SELSE	7	40
begin	SBEGIN	2	40
writeln	SWRITELN	23	41
(	SLPAREN	33	41
'Input error'	SSTRING	45	41
)	SRPAREN	34	41
end	SEND	8	42
end	SEND	8	43
.	SDOT	42	43
